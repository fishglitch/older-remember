/* Style for the canvas container */
#canvasContainer {
    position: relative;
    width: 100%;
    height: 100vh; /* Full height for the container */
    margin: 0 auto; /* Center the container */
}

/* Style for the fourChannelCanvas */
#fourChannelCanvas {
    position: absolute; /* Position it as a background canvas */
    width: 100%;       /* Full width */
    height: 100%;      /* Full height */
            /* Lower z-index than overlay elements */
}

/* Wrapper for the video and images array canvas */
#overlayContainer {
    position: absolute; /* Absolutely position this over the fourChannelCanvas */
    top: 50%;           /* Center vertically */
    left: 50%;          /* Center horizontally */
    transform: translate(-50%, -50%); /* Use transform to center the wrapper */
    display: flex;      /* Use flexbox to arrange children */
    justify-content: center; /* Center children horizontally in flexbox */
    align-items: center; /* Center children vertically in flexbox */
    z-index: 2;        /* Set above the fourChannelCanvas */
    flex-wrap: wrap; /* Allow wrapping depending on screen size */
}

/* Center video element */
#videoElement {
    width: 400px;        /* Fixed width for the video */
    height: auto;        /* Maintain aspect ratio */
    margin: 20px;        /* Add margin for spacing */
    display: block;      /* Ensure it behaves as a block element */
}

/* Set dimensions for the image canvases */
#imgCameraPhones, #imgFences, #imgHands {
    width: 300px;        /* Fixed width */
    height: 300px;       /* Fixed height */
    margin: 20px;        /* Add margin for spacing */
    display: block;      /* Ensure it behaves as a block element */
    transform: rotate(calc(30deg * (var(--i) - 1))); /* Rotate canvases for scattering effect */
}

/* Custom CSS variable for each canvas rotation */
#imgCameraPhones { --i: 1; }
#imgFences { --i: 2; }
#imgHands { --i: 3; }